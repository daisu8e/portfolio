version: 2
jobs:

  test:
    docker:
      - image: circleci/node:12.7.0
    steps:
      - checkout

      - restore_cache:
          key: npm-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: npm-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: npm test
          command: CI=true npm test

  deploy: &deploy
    docker:
      - image: circleci/node:12.7.0
    steps:
      - run:
          name: install awscli
          working_directory: /tmp
          command: |
            curl -O https://bootstrap.pypa.io/get-pip.py
            python3 get-pip.py --user
            export PATH=~/.local/bin:$PATH
            source ~/.profile
            pip3 install awscli --upgrade --user
            aws --version

#      - run: sudo apt-get update && sudo apt-get install python3-pip groff-base
#      - run: sudo pip3 install awscli

#      - run:
#          name: install awscli
#          working_directory: /tmp
#          command: |
#            curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
#            unzip awscliv2.zip
#            sudo ./aws/install

      - checkout

      - restore_cache:
          key: npm-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: npm-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: npm run build
          command: CI=true npm run build
      - run:
          name: npm run deploy
          command: npm run deploy:$PORTFOLIO_ENV

  deploy_testing:
    <<: *deploy
    environment:
      PORTFOLIO_ENV: testing

  deploy_staging:
    <<: *deploy
    environment:
      PORTFOLIO_ENV: staging

  deploy_production:
    <<: *deploy
    environment:
      PORTFOLIO_ENV: production

workflows:
  version: 2

  testing:
    jobs:
      - test:
          filters:
            branches:
              only: testing
      - deploy_testing:
          requires:
            - test

  production:
    jobs:
      - deploy_staging:
          filters:
            branches:
              only: dev

#      - test:
#          filters:
#            branches:
#              only: master
#      - deploy_staging:
#          requires:
#            - test
#      - approve:
#          type: approval
#          requires:
#            - deploy_staging
#      - deploy_production:
#          requires:
#            - approve
